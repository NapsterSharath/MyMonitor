
###############################################################################
## Global section
###############################################################################

set daemon  30             # check services at 30 seconds intervals

set logfile /home/ec2-user/monit-5.20.0/log/monit.log

set pidfile /home/ec2-user/monit-5.20.0/monit.pid

set idfile /home/ec2-user/monit-5.20.0/.monit.id

set statefile /home/ec2-user/monit-5.20.0/.monit.state

set limits {
     programOutput:     512 B,      # check program's output truncate limit
     sendExpectBuffer:  256 B,      # limit for send/expect protocol test
     fileContentBuffer: 512 B,      # limit for file content test
     httpContentBuffer: 1 MB,       # limit for HTTP content test
     networkTimeout:    5 seconds   # timeout for network I/O
     programTimeout:    300 seconds # timeout for check program
     stopTimeout:       10 seconds  # timeout for service stop
     startTimeout:      10 seconds  # timeout for service start
     restartTimeout:    10 seconds  # timeout for service restart
 }


set ssl {
     verify     : disable, # verify SSL certificates (disabled by default but STRONGLY RECOMMENDED)
     selfsigned : allow   # allow self signed SSL certificates (reject by default)
 }

set mailserver localhost,               # primary mailserver


set mail-format {
  from:    Monit Alert <monit@$HOST>
  subject: monit alert --  $EVENT $SERVICE
  message: $EVENT Service $SERVICE
                Date:        $DATE
                Action:      $ACTION
                Host:        $HOST
                Description: $DESCRIPTION

}

set alert {{ email }} only on { timeout }                    # receive alerts only for consistent failure to start app
#
## Do not alert when Monit starts, stops or performs a user initiated action.
## This filter is recommended to avoid getting alerts for trivial cases.
#
# set alert your-name@your.domain not on { instance, action }

set httpd port 2812 and
    #use address localhost  # only accept connection from localhost
    #allow localhost        # allow localhost to connect to the server and
    allow admin:admin      # require user 'admin' with password 'monit'



###############################################################################
## Services
###############################################################################


## Check general system resources such as load average, cpu and memory

  check system $HOST
    if loadavg (1min) > 2 then alert
    if loadavg (5min) > 2 then alert
    if cpu usage > 75% for 10 cycles then alert
    if memory usage > 75% then alert
    if swap usage > 25% then alert


## Check filesystem 

#  check filesystem 
#    if space usage > 90% for 5 times within 15 cycles then alert
#    if space usage > 90% then alert
#    if inode usage > 90% then alert


## Check directory permission

#  check directory bin with path
#    if failed permission 755 then alert



